ToString template:
  public final String toString() {
    StringBuilder sb = new StringBuilder();

    sb.append("Whatever: ");
    sb.append(whatever);
    sb.append("\n");

    return sb.toString();
  }





Copy constructor:
  public Contact(final Contact originalObject) {
    if (originalObject == null) {

      System.out.println("Error: null Contact object.");
      System.exit(0);
    }

    firstName = originalObject.firstName;
    lastName = originalObject.lastName;
    email = originalObject.email;
    
    try {
      address = (Address) address.clone();
    }
    catch (CloneNotSupportedException e) {
      e.printStackTrace();
    }
  }




CompareTo template:
  public final int compareTo(final Contact o) {
    return this.lastName.compareTo(o.lastName);
  }

Or

  public int compareTo(Student o) {
    if (this.gpa < o.gpa) {
      return -1;
    }
    else if (this.gpa > o.gpa) {
      return 1;
    }
    else
      return 0;
  }





Equals template:
  public final boolean equals(final Object other) {
    if (other == null) {
      return false;
    } // end of if ()
    else if (this.getClass() != other.getClass()) {
      return false;
    } // end of if ()
    else {
      Address address = (Address) other;
      return (this.street.equals(address.street)
          && this.city.equals(address.city)
          && this.state.equals(address.state) && this.zip.equals(address.zip));
    } // end of else
  }






Clone template:
  public final Object clone() throws CloneNotSupportedException {
    return super.clone();
  }






Hashcode template:
  public final int hashCode() {
    final int prime = 31;
    int result = super.hashCode();
    result = prime * result;
    return result;
  }